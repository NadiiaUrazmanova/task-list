{"version":3,"file":"index.js","sources":["../src/js/data.js","../src/js/refs.js","../src/js/render-tasks.js","../src/js/handlers.js","../src/main.js"],"sourcesContent":["export const tasks = []","export const refs = {\n    headerForm: document.querySelector('.header-form'),\n    tasksList: document.querySelector('.tasks-list')\n}\n","import { refs } from \"./refs\"\n\nexport function renderTasks(tasks) {\n    const markup = tasks.map(({ name, description, id }) => `\n    <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id=${id}>Delete</button>\n      <h3>${name}</h3>\n      <p>${description}</p>\n  </li>`).join('')\n    refs.tasksList.innerHTML = markup;\n    \n    \nconsole.log(markup);\n}\n\n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { nanoid } from \"nanoid\";\nimport { tasks } from \"./data\";\nimport { renderTasks } from \"./render-tasks\";\n\n\n\nexport function onHeaderFormSubmit(e) {\n    e.preventDefault()\n    \n    \n    const { taskName, taskDescription } = e.target.elements;\n\n    const taskNameValue = taskName.value.trim();\n    const taskDescriptionValue = taskDescription.value.trim();\n\n    if (taskNameValue === '' || taskDescriptionValue === '') {\n        iziToast.error({\n            message: 'Не всі поля заповнені',\n            position: 'topLeft'\n        });\n        return;\n    }\n\n    const task = {\n        name: taskNameValue,\n        description: taskDescriptionValue,\n        id: nanoid()\n    }\n    tasks.push(task);\n    renderTasks(tasks);\n    e.target.reset();\n}\n\nexport function onTaskDelete(e) {\n    \n}\n\n\n\n\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\nimport { onHeaderFormSubmit, onTaskDelete } from './js/handlers.js';\nimport { refs } from './js/refs.js';\nrefs.headerForm.addEventListener('submit', onHeaderFormSubmit);\nrefs.tasksList.addEventListener('click', onTaskDelete);\n"],"names":["tasks","refs","renderTasks","markup","name","description","id","onHeaderFormSubmit","e","taskName","taskDescription","taskNameValue","taskDescriptionValue","iziToast","task","nanoid","onTaskDelete"],"mappings":"6vBAAO,MAAMA,EAAQ,CAAA,ECARC,EAAO,CAChB,WAAY,SAAS,cAAc,cAAc,EACjD,UAAW,SAAS,cAAc,aAAa,CACnD,ECDO,SAASC,EAAYF,EAAO,CAC/B,MAAMG,EAASH,EAAM,IAAI,CAAC,CAAE,KAAAI,EAAM,YAAAC,EAAa,GAAAC,CAAE,IAAO;AAAA;AAAA,mDAETA,CAAE;AAAA,YACzCF,CAAI;AAAA,WACLC,CAAW;AAAA,QACd,EAAE,KAAK,EAAE,EACbJ,EAAK,UAAU,UAAYE,EAG/B,QAAQ,IAAIA,CAAM,CAClB,CCLO,SAASI,EAAmBC,EAAG,CAClCA,EAAE,eAAgB,EAGlB,KAAM,CAAE,SAAAC,EAAU,gBAAAC,CAAe,EAAKF,EAAE,OAAO,SAEzCG,EAAgBF,EAAS,MAAM,KAAI,EACnCG,EAAuBF,EAAgB,MAAM,KAAI,EAEvD,GAAIC,IAAkB,IAAMC,IAAyB,GAAI,CACrDC,EAAS,MAAM,CACX,QAAS,wBACT,SAAU,SACtB,CAAS,EACD,MACH,CAED,MAAMC,EAAO,CACT,KAAMH,EACN,YAAaC,EACb,GAAIG,EAAQ,CACf,EACDf,EAAM,KAAKc,CAAI,EACfZ,EAAYF,CAAK,EACjBQ,EAAE,OAAO,OACb,CAEO,SAASQ,EAAaR,EAAG,CAEhC,CCnBAP,EAAK,WAAW,iBAAiB,SAAUM,CAAkB,EAC7DN,EAAK,UAAU,iBAAiB,QAASe,CAAY"}